import React, { Component } from 'react'
import PropTypes from 'prop-types'
import axios from 'axios';
import querystring from 'querystring';

export default class Rave extends Component {
  constructor(props) {
    super(props);
    this.getReference = this.getReference.bind(this);
    this.payWithRave = this.payWithRave.bind(this);
  }

  payWithRave() {
    window.getpaidSetup({
      customer_email: this.props.customer_email,
      customer_phone: this.props.customer_phone || '',
      payment_method: this.props.payment_method || 'both',
      amount: this.props.amount,
      txref: this.props.txref || this.getReference(),
      PBFPubKey: this.props.ravePubKey,
      onclose: () => this.props.onclose(),
      callback: response => this.props.callback(response),
      meta: this.props.metadata || [],
      currency: this.props.currency || 'NGN',
      country: this.props.country || 'NG',
      redirect_url: this.props.redirect_url || null,
      customer_firstname: this.props.customer_firstname || '',
      customer_lastname: this.props.customer_lastname || '',
      custom_title: this.props.custom_title || '',
      custom_description: this.props.custom_description || '',
      custom_logo: this.props.custom_logo || ''
    })
  }

  getReference() {
    let text = "";
    let possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.=";

    for (let i = 0; i < 10; i++)
      text += possible.charAt(Math.floor(Math.random() * possible.length));

    return 'rave_' + text;
  }

  render() {
    return (
      <button className={this.props.class} onClick={this.payWithRave} >
        {this.props.pay_button_text || ''}
      </button>
    )
  }
}

export function RequeryTransaction({ live, txref, SECKEY }) {
  var url = 'http://flw-pms-dev.eu-west-1.elasticbeanstalk.com'
  if (live) {
    url = 'https://api.ravepay.co'
  }

  return axios.post(`${url}/flwv3-pug/getpaidx/api/xrequery`, {
    txref, SECKEY, last_attempt: 1
  })
    .then(function (response) {
      return response;
    })
    .catch(function (error) {
      return error;
    });
}

export function VerifyTransaction({ live, txref, SECKEY }) {
  var url = 'http://flw-pms-dev.eu-west-1.elasticbeanstalk.com'
  if (live) {
    url = 'https://api.ravepay.co'
  }


  return axios.post(`${url}/flwv3-pug/getpaidx/api/verify`, {

    tx_ref: txref,
    SECKEY: SECKEY,
    normalize: 1

  })
    .then(function (response) {
      return response;
    })
    .catch(function (error) {
      throw error;
    });
}

Rave.propTypes = {
  pay_button_text: PropTypes.string,
  class: PropTypes.string,
  payment_method: PropTypes.string,
  metadata: PropTypes.array,
  currency: PropTypes.string,
  redirect_url: PropTypes.string,
  country: PropTypes.string,
  customer_firstname: PropTypes.string,
  customer_lastname: PropTypes.string,
  custom_title: PropTypes.string,
  custom_description: PropTypes.string,
  custom_logo: PropTypes.string,
  txref: PropTypes.string,
  customer_email: PropTypes.string.isRequired,
  customer_phone: PropTypes.string,
  amount: PropTypes.string.isRequired, //in Naira
  ravePubKey: PropTypes.string.isRequired,
  callback: PropTypes.func.isRequired,
  onclose: PropTypes.func.isRequired
}