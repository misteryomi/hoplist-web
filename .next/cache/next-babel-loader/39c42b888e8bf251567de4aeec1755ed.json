{"ast":null,"code":"var _jsxFileName = \"/Users/clicks/Documents/Apps/hoplist-web/pages/activity/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { Container, Row, Col, Button, Alert } from 'reactstrap';\nimport { faHeart, faCommentAlt, faCalendar, faClock } from '@fortawesome/free-regular-svg-icons';\nimport { faShare, faShareAlt, faShieldAlt, faShieldVirus, faSearchLocation, faMapMarked, faMapMarkedAlt, faMapPin, faMapMarker, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport Icon from '../../components/Icon';\nimport ShareModal from '../../components/ShareModal';\nimport DownloadBtns from '../../components/DownloadBtns';\nimport Avatar from 'react-avatar';\nimport Rave from 'react-flutterwave-rave';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport JoinForm from '../../components/JoinForm';\nimport ShieldCheckIcon from 'mdi-react/ShieldCheckIcon';\nimport moment from 'moment';\nimport axios from '../../utils/axios';\nimport Share from '../../components/Share';\nexport default function Home({\n  data\n}) {\n  console.log({\n    data\n  });\n\n  if (!data.status) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"An error occured\");\n  }\n\n  const activity = data.data;\n  return __jsx(\"div\", {\n    className: \"activity-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, activity.images.length > 0 && __jsx(\"div\", {\n    className: \"activity-image\",\n    style: {\n      backgroundImage: \"url('\" + activity.images[0] + \"')\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"You are invited to join\"), __jsx(\"h1\", {\n    className: \"activity-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, activity.title), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    icon: faCalendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), \" \", moment(activity.dateTime).format('DD MMM')), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"About this activity\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, activity.description), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(Avatar, {\n    size: \"80\",\n    color: \"#FC4A1A\",\n    src: activity.user.profileImage,\n    round: true,\n    name: `${activity.user.firstName} ${activity.user.lastName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, `${activity.user.firstName} ${activity.user.lastName}`), __jsx(\"span\", {\n    className: \"text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"Creator\"))), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Share with friends\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"You can share this activity with your friends via:\"), __jsx(Share, {\n    url: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }\n  }, __jsx(JoinForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }))), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Try something new with your community today\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Download the App\"), __jsx(DownloadBtns, {\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })));\n}\nexport async function getStaticProps(ctx) {\n  const res = await axios(`/activities/${ctx.params.id}`);\n  const json = await res.data;\n  return {\n    props: {\n      data: json\n    }\n  };\n} // This function gets called at build time\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await axios('/activities');\n  const activities = await res.data.data;\n  console.log(res); // Get the paths we want to pre-render based on posts\n\n  const paths = activities.length > 0 && activities.map(activity => ({\n    params: {\n      id: activity._id\n    }\n  })); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/clicks/Documents/Apps/hoplist-web/pages/activity/[id].js"],"names":["Head","Container","Row","Col","Button","Alert","faHeart","faCommentAlt","faCalendar","faClock","faShare","faShareAlt","faShieldAlt","faShieldVirus","faSearchLocation","faMapMarked","faMapMarkedAlt","faMapPin","faMapMarker","faMapMarkerAlt","Icon","ShareModal","DownloadBtns","Avatar","Rave","FontAwesomeIcon","JoinForm","ShieldCheckIcon","moment","axios","Share","Home","data","console","log","status","activity","images","length","backgroundImage","title","dateTime","format","description","user","profileImage","firstName","lastName","getStaticProps","ctx","res","params","id","json","props","getStaticPaths","activities","paths","map","_id","fallback"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { Container, Row, Col, Button, Alert } from 'reactstrap';\nimport { faHeart, faCommentAlt, faCalendar, faClock } from '@fortawesome/free-regular-svg-icons';\nimport { faShare, faShareAlt, faShieldAlt, faShieldVirus, faSearchLocation, faMapMarked, faMapMarkedAlt, faMapPin, faMapMarker, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport Icon from '../../components/Icon';\nimport ShareModal from '../../components/ShareModal';\nimport DownloadBtns from '../../components/DownloadBtns';\nimport Avatar from 'react-avatar';\nimport Rave from 'react-flutterwave-rave'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport JoinForm from '../../components/JoinForm';\nimport ShieldCheckIcon from 'mdi-react/ShieldCheckIcon';\nimport moment from 'moment';\nimport axios from '../../utils/axios';\nimport Share from '../../components/Share';\n\nexport default function Home({data}) {\n\n\n  console.log({data})\n\n\n\n\n  if(!data.status) {\n    return (<div>An error occured</div> )\n  }\n\n  const activity = data.data;\n  return (\n    <div className=\"activity-details\">\n      {activity.images.length > 0 && (\n        <div className=\"activity-image\" style={{backgroundImage: \"url('\"+ activity.images[0]+\"')\"}}></div>\n      )}\n\n        <h4>You are invited to join</h4>\n        <h1 className=\"activity-title\">{activity.title}</h1>\n\n        <Row>\n           <Col md={6}>\n              <div>\n                <Icon icon={faCalendar} /> {moment(activity.dateTime).format('DD MMM')}\n              </div><br/>\n              <hr/>\n              <h4>About this activity</h4>\n              <p>{activity.description}</p>\n\n              <br/><br/>\n              <Row>\n                <Col md={2}>\n                  <Avatar size=\"80\" color=\"#FC4A1A\" src={activity.user.profileImage} round name={`${activity.user.firstName} ${activity.user.lastName}`}  />\n                </Col>\n                <Col>            \n                <br/>\n                  <h3>{`${activity.user.firstName} ${activity.user.lastName}`}</h3>\n                  <span className=\"text-gray\">Creator</span>\n                </Col>\n              </Row>  \n\n              <hr/>\n\n              <h4>Share with friends</h4>\n              <p>You can share this activity with your friends via:</p>\n\n              <Share url=\"#\" />\n            </Col>\n           <Col md={6}> \n              <JoinForm />\n            </Col>\n        </Row>\n        <hr/>\n\n\n\n        \n\n        <div className=\"footer\">\n            <h2>Try something new with your community today</h2>\n            <p>Download the App</p>\n\n            <DownloadBtns inverse />\n        </div>\n\n     </div>\n  )\n}\n\nexport async function getStaticProps(ctx) {\n  const res = await axios(`/activities/${ctx.params.id}`)\n  const json = await res.data;\n\n  return { props: {data: json} }\n}\n\n// This function gets called at build time\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await axios('/activities')\n  const activities = await res.data.data\n\n  console.log(res);\n  // Get the paths we want to pre-render based on posts\n  const paths = activities.length > 0 && activities.map((activity) => ({\n    params: { id: activity._id },\n  }))\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false }\n}\n"]},"metadata":{},"sourceType":"module"}