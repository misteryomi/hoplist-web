{"ast":null,"code":"var _jsxFileName = \"/Users/clicks/Documents/Apps/hoplist-web/components/ShareModal.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Alert, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { useToasts } from 'react-toast-notifications';\nconst shareOptions = [{\n  name: 'Facebook',\n  icon: '',\n  link: ''\n}, {\n  name: 'Facebook',\n  icon: '',\n  link: ''\n}, {\n  name: 'Facebook',\n  icon: '',\n  link: ''\n}];\n\nconst ShareModal = props => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const {\n    addToast\n  } = useToasts();\n\n  const handleCopy = () => {\n    addToast('Link copied successfully!', {\n      appearance: 'success',\n      autoDismiss: true\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    color: \"danger\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, buttonLabel), __jsx(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Share this Activity\")), __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, shareOptions.map((option, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, option.name)), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(Label, {\n    for: \"link\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Password\"), __jsx(Input, {\n    type: \"text\",\n    name: \"password\",\n    id: \"link\",\n    placeholder: \"Password\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), ' ', __jsx(Button, {\n    onClick: handleCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Copy\")), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), __jsx(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Alert, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Sharing Tips\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"You can copy and paste the link anywhere (Slack, LinkedIn, Snapchat, Telegram etc.)\")))));\n};\n\nexport default ShareModal;","map":{"version":3,"sources":["/Users/clicks/Documents/Apps/hoplist-web/components/ShareModal.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Alert","Form","FormGroup","Label","Input","useToasts","shareOptions","name","icon","link","ShareModal","props","buttonLabel","className","modal","setModal","toggle","addToast","handleCopy","appearance","autoDismiss","map","option","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Alert, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { useToasts } from 'react-toast-notifications'\n\nconst shareOptions = [\n    {\n        name: 'Facebook',\n        icon: '',\n        link: '',\n    },\n    {\n        name: 'Facebook',\n        icon: '',\n        link: '',\n    },\n    {\n        name: 'Facebook',\n        icon: '',\n        link: '',\n    },\n]\n\nconst ShareModal = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n  const { addToast } = useToasts()\n\n  const handleCopy = () => {\n    addToast('Link copied successfully!', {\n        appearance: 'success',\n        autoDismiss: true,\n      })\n  }\n\n  return (\n    <div>\n      <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n            <h3>Share this Activity</h3>\n        </ModalHeader>\n        <ModalBody>\n            {\n                shareOptions.map((option, index) => \n                    <div key={index}>\n                        {option.name}\n                    </div>\n                )\n            }\n\n            <hr/>\n            <Form inline>\n                <FormGroup>\n                    <Label for=\"link\" hidden>Password</Label>\n                    <Input type=\"text\" name=\"password\" id=\"link\" placeholder=\"Password\" disabled/>\n                </FormGroup>\n                {' '}\n                {/* <Toast title=\"Copy\" content=\"Link copied to clipboard\"/> */}\n                <Button onClick={handleCopy}>Copy</Button>\n            </Form>\n\n            <hr/>\n\n\n        </ModalBody>\n        <ModalFooter>\n            <Alert color=\"warning\">\n                <h3>Sharing Tips</h3>\n                <p>You can copy and paste the link anywhere (Slack, LinkedIn, Snapchat, Telegram etc.)</p>\n            </Alert>\n\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ShareModal;"]},"metadata":{},"sourceType":"module"}