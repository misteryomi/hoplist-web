{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { Container, Row, Col, Button, Alert } from 'reactstrap';\nimport { faHeart, faCommentAlt, faCalendar, faClock } from '@fortawesome/free-regular-svg-icons';\nimport { faShare, faShareAlt, faShieldAlt, faShieldVirus, faSearchLocation, faMapMarked, faMapMarkedAlt, faMapPin, faMapMarker, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport Icon from '../components/Icon';\nimport ShareModal from '../components/ShareModal';\nimport DownloadBtns from '../components/DownloadBtns';\nimport Avatar from 'react-avatar';\nimport Rave from 'react-flutterwave-rave';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport JoinModal from '../components/JoinModal';\nimport ShieldCheckIcon from 'mdi-react/ShieldCheckIcon';\nimport moment from 'moment';\nimport axios from '../utils/axios';\nexport default function Home({\n  data\n}) {\n  console.log({\n    data\n  });\n\n  if (!data.status) {\n    return __jsx(\"div\", null, \"An error occured\");\n  }\n\n  const activity = data.data;\n  return __jsx(\"div\", {\n    className: \"activity-details\"\n  }, activity.images.length > 0 && __jsx(\"div\", {\n    className: \"activity-image\",\n    style: {\n      backgroundImage: \"url('\" + activity.images[0] + \"')\"\n    }\n  }), __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 20,\n      height: 20,\n      marginRight: 20\n    }\n  }, __jsx(Icon, {\n    icon: faHeart,\n    fixedWidth: false\n  })), __jsx(\"div\", {\n    style: {\n      width: 20,\n      height: 20\n    }\n  }, __jsx(Icon, {\n    icon: faCommentAlt,\n    fixedWidth: false,\n    size: \"xs\"\n  })))), __jsx(Col, null, __jsx(\"div\", {\n    className: \"text-right\"\n  }, __jsx(ShareModal, {\n    buttonLabel: __jsx(\"div\", null, \"Share \", ' ', \" \", __jsx(Icon, {\n      style: {\n        marginLeft: 5\n      },\n      icon: faShareAlt\n    })),\n    url: `https://www.hoplist.co/activity/${activity._id}`\n  })))), __jsx(\"hr\", null), __jsx(\"h1\", {\n    className: \"activity-title\"\n  }, activity.title), __jsx(\"p\", null, activity.description), __jsx(\"hr\", null), __jsx(Row, null, __jsx(Col, {\n    xs: 5,\n    md: 2\n  }, __jsx(Alert, {\n    color: \"success\",\n    className: \"inline\"\n  }, __jsx(Icon, {\n    icon: faCalendar\n  }), __jsx(\"div\", {\n    className: \"ml-3\"\n  }, \"Date\", __jsx(\"h3\", null, moment(activity.dateTime).format('DD MMM'))))), __jsx(Col, {\n    xs: 2,\n    md: 8\n  }), __jsx(Col, {\n    xs: 5,\n    md: 2\n  }, __jsx(\"div\", {\n    className: \"text-right\"\n  }, __jsx(Alert, {\n    color: \"success\",\n    className: \"inline\"\n  }, __jsx(Icon, {\n    icon: faClock\n  }), __jsx(\"div\", {\n    className: \"ml-3\"\n  }, \"Time\", __jsx(\"h3\", null, moment(activity.dateTime).format('hh:mma'))))))), __jsx(\"hr\", null), __jsx(Row, null, __jsx(Col, null, __jsx(\"span\", {\n    style: {\n      fontSize: 15\n    }\n  }, \"Location\")), __jsx(Col, null, __jsx(\"div\", {\n    className: \"text-right\"\n  }, __jsx(\"h3\", null, __jsx(Icon, {\n    icon: faMapMarkerAlt\n  }), \" Not set\")))), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"text-center text-md-left\"\n  }, __jsx(Alert, {\n    color: \"success\"\n  }, __jsx(Row, null, __jsx(Col, {\n    md: 1\n  }, __jsx(\"div\", {\n    className: \"notice-shield mb-3 \"\n  }, __jsx(\"div\", {\n    style: {\n      width: 40,\n      height: 40\n    }\n  }, __jsx(Icon, {\n    icon: faShieldAlt,\n    size: \"4.5em\",\n    fixedWidth: false,\n    color: \"#fff\"\n  })))), __jsx(Col, {\n    className: \"justify-center\"\n  }, \"You can only view the exact location and/or link when you join the activity. Your host will be notified of your attendance.\")))), __jsx(\"hr\", null), __jsx(\"div\", {\n    className: \"text-center text-md-left\"\n  }, __jsx(\"h3\", null, \"Your Host\"), __jsx(Row, null, __jsx(Col, {\n    sm: 2\n  }, __jsx(Avatar, {\n    color: \"#FC4A1A\",\n    src: activity.user.profileImage,\n    round: true,\n    name: `${activity.user.firstName} ${activity.user.lastName}`\n  })), __jsx(Col, null, __jsx(\"br\", null), __jsx(\"h3\", null, `${activity.user.firstName} ${activity.user.lastName}`), __jsx(\"span\", {\n    className: \"text-gray\"\n  }, \"Creator\"))), __jsx(\"br\", null), __jsx(\"div\", null, __jsx(\"p\", {\n    className: \"text-wrap\"\n  }, activity.user.description)), __jsx(Row, null, __jsx(Col, {\n    md: 3\n  }, __jsx(Button, {\n    outline: true,\n    color: \"danger\",\n    block: true\n  }, \"Follow\")))), __jsx(\"div\", {\n    className: \"footer\"\n  }, __jsx(\"h2\", null, \"Try something new with your community today\"), __jsx(\"p\", null, \"Download the App\"), __jsx(DownloadBtns, {\n    inverse: true\n  })), __jsx(\"div\", {\n    style: {\n      height: 100\n    }\n  }), __jsx(\"div\", {\n    className: \"fixed-footer\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    md: 8\n  }, \"Price \", __jsx(\"br\", null), __jsx(\"h3\", null, \"Free\")), __jsx(Col, {\n    md: 4\n  }, __jsx(\"div\", {\n    className: \"text-right\"\n  }, __jsx(JoinModal, {\n    activity_id: activity._id,\n    buttonLabel: \"Join Activity\"\n  })))))));\n}\nexport async function getStaticProps(ctx) {\n  const res = await axios(`/activities/${ctx.params.id}`);\n  const json = await res.data;\n  return {\n    props: {\n      data: json\n    }\n  };\n} // This function gets called at build time\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await axios('/activities');\n  const activities = await res.data.data;\n  console.log(res); // Get the paths we want to pre-render based on posts\n\n  const paths = activities.length > 0 && activities.map(activity => ({\n    params: {\n      id: activity._id\n    }\n  })); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n}","map":null,"metadata":{},"sourceType":"module"}