{"ast":null,"code":"var _jsxFileName = \"/Users/clicks/Documents/Apps/hoplist-web/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport Layout from \"../components/Layout\";\nimport { ToastProvider } from 'react-toast-notifications';\nimport '../theme/style.scss';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(ToastProvider, {\n    autoDismiss: true,\n    autoDismissTimeout: 6000,\n    components: {\n      Toast: Snack\n    },\n    placement: \"bottom-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }\n  }))));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/clicks/Documents/Apps/hoplist-web/pages/_app.js"],"names":["Layout","ToastProvider","MyApp","Component","pageProps","Toast","Snack"],"mappings":";;;;;;AAAA;AAEA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAGA,OAAO,qBAAP;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACrC,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AACA,IAAA,WAAW,MADX;AAEA,IAAA,kBAAkB,EAAE,IAFpB;AAGA,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAEC;AAAT,KAHZ;AAIA,IAAA,SAAS,EAAC,eAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAND,CADJ,CADJ;AAYD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\n\nimport Layout from \"../components/Layout\"\nimport { ToastProvider } from 'react-toast-notifications';\n\n\nimport '../theme/style.scss';\n\nfunction MyApp({ Component, pageProps }) {\n    return (\n        <Layout>\n            <ToastProvider\n            autoDismiss\n            autoDismissTimeout={6000}\n            components={{ Toast: Snack }}\n            placement=\"bottom-center\"\n            >\n             <Component {...pageProps} />\n            </ToastProvider>\n        </Layout>\n    )\n  }\n  \n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // MyApp.getInitialProps = async (appContext) => {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  \n  export default MyApp"]},"metadata":{},"sourceType":"module"}